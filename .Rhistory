l2= length(x)-1
sd2= sqrt(s2/l2)
return (sd2)
}
sample_sd(x)
##Part1C: Confidence interval
calculate_CI<- function(x, k){
N= length(x)
degrees_freedom = N - 1
alpha <- 1 - k
se = sample_sd(x)/sqrt(N)
t_score = qt(p=alpha/2, df=degrees_freedom, lower.tail=FALSE)
mar_err<- t_score * se
CI= c((sample_mean(x)-mar_err),(sample_mean(x)+mar_err))
return(CI)
}
calculate_CI(x, 0.95)
calculate_CI(x, 0.90)
##Load TidyTuesdayR data
tuesdata <- tidytuesdayR::tt_load('2020-01-07')
rainfall <- tuesdata$rainfall
temperature <- tuesdata$temperature
library(here)
if(!file.exists(here("data","tuesdata_rainfall.RDS"))){
tuesdata <- tidytuesdayR::tt_load('2020-01-07')
rainfall <- tuesdata$rainfall
temperature <- tuesdata$temperature
# save the files to RDS objects
saveRDS(tuesdata$rainfall, file = here("data","tuesdata_rainfall.RDS"))
saveRDS(tuesdata$temperature, file = here("data","tuesdata_temperature.RDS"))
}
rainfall <- readRDS(here("data","tuesdata_rainfall.RDS"))
##Glimpse dataset
library(tidyverse)
glimpse(rainfall)
glimpse(temperature)
##city_name capitalize, and joining two datasets
new_rainfall$city_name<- toupper(new_rainfall$city_name)
df1 = merge(new_rainfall, temperature, on ='date')
q <- filter(df1, year >= 2014) %>% group_by(city_name, year) %>%
summarise (max_temp = max(temperature, na.rm= TRUE), min_temp = min(temperature, na.rm = TRUE))
q %>% ggplot (aes(x=year, y= max_temp, color= "Maximum temperature", group=1)) + geom_point() + geom_line(color="blue")  + geom_line(aes(y= min_temp, color= "Minimum temperature"))+ geom_point() + facet_grid(. ~ city_name)  + ggtitle("Temperature data over time", subtitle = "Maximum and minimum temperature of each cities over time")+ labs(y= "Temoerature", x= "Time(in years)")
df2 <- filter(df1, year >= 2014)
rain_df<- df2 %>% group_by(city_name, year) %>%
summarise(sm= sample_mean(rainfall), sd= sample_sd(rainfall), lower_bound= calculate_CI(rainfall, 0.95)[[1]], upper_bound= calculate_CI(rainfall, 0.95)[[2]])
lot <- rain_df%>% ggplot (aes(x=year, y= sm, color= "Mean rainfall", group=1))+ ggtitle("Mean rainfall in cities in Australia")+ labs(y= "Rainfall(in inches)", x= "Time(in years)") + geom_point() + geom_line(color="maroon")+ geom_line(aes(y= lower_bound, color= "Lower bound")) +geom_line(aes(y= upper_bound, color= "Upper bound"))+ facet_grid(. ~ city_name) + geom_errorbar(aes(ymin=lower_bound, ymax=upper_bound), width=.2, position=position_dodge(.9))
plot + theme(axis.line = element_line(size = 3, colour = "grey80"))
plot <- rain_df%>% ggplot (aes(x=year, y= sm, color= "Mean rainfall", group=1))+ ggtitle("Mean rainfall in cities in Australia")+ labs(y= "Rainfall(in inches)", x= "Time(in years)") + geom_point() + geom_line(color="maroon")+ geom_line(aes(y= lower_bound, color= "Lower bound")) +geom_line(aes(y= upper_bound, color= "Upper bound"))+ facet_grid(. ~ city_name) + geom_errorbar(aes(ymin=lower_bound, ymax=upper_bound), width=.2, position=position_dodge(.9))
plot + theme(axis.line = element_line(size = 3, colour = "grey80"))
##dropping NAs, creating date column,
library(lubridate)
new_rainfall <- na.omit(rainfall)
new_rainfall$date <- paste(new_rainfall$year, new_rainfall$month, new_rainfall$day, sep="-") %>% ymd() %>% as.Date()
new_rainfall = select(new_rainfall, -month, -day)
##Load TidyTuesdayR data
tuesdata <- tidytuesdayR::tt_load('2020-01-07')
##Glimpse dataset
library(tidyverse)
glimpse(rainfall)
glimpse(temperature)
##Glimpse dataset
library(tidyverse)
glimpse(rainfall)
glimpse(temperature)
##Glimpse dataset
library(tidyverse)
glimpse(rainfall)
glimpse(temperature)
##Glimpse dataset
library(tidyverse)
glimpse(rainfall)
glimpse(temperature)
##Load TidyTuesdayR data
tuesdata <- tidytuesdayR::tt_load('2020-01-07')
##dropping NAs, creating date column,
library(lubridate)
new_rainfall <- na.omit(rainfall)
new_rainfall$date <- paste(new_rainfall$year, new_rainfall$month, new_rainfall$day, sep="-") %>% ymd() %>% as.Date()
new_rainfall = select(new_rainfall, -month, -day)
##dropping NAs, creating date column,
library(lubridate)
new_rainfall <- na.omit(rainfall)
new_rainfall$date <- paste(new_rainfall$year, new_rainfall$month, new_rainfall$day, sep="-") %>% ymd() %>% as.Date()
new_rainfall = select(new_rainfall, -month, -day)
##city_name capitalize, and joining two datasets
new_rainfall$city_name<- toupper(new_rainfall$city_name)
df1 = merge(new_rainfall, temperature, on ='date')
df1 %>%
filter(city_name == "PERTH", year == 2000) %>%
ggplot(aes(log(rainfall))) +
geom_histogram()
df1 %>%
filter(city_name == "BRISBANE", year == 2000) %>%
ggplot(aes(log(rainfall))) +
geom_histogram()
df1 %>%
filter(city_name == "BRISBANE", year == 2005) %>%
ggplot(aes(log(rainfall))) +
geom_histogram()
hist_rainfall<- function(city,year){
df1 %>%
filter(city_name == city, year == year) %>%
ggplot(aes(log(rainfall))) +
geom_histogram()
}
hist_rainfall(PERTH, 2000)
hist_rainfall<- function(city,year){
print(city, year)
df1 %>%
filter(city_name == city, year == year) %>%
ggplot(aes(log(rainfall))) +
geom_histogram()
}
hist_rainfall(PERTH, 2000)
hist_rainfall("PERTH", 2000)
hist_rainfall<- function(city,year){
print(city)
print(year)
df1 %>%
filter(city_name == city, year == year) %>%
ggplot(aes(log(rainfall))) +
geom_histogram()
}
hist_rainfall("PERTH", 2000)
hist_rainfall("SYDNEY", 2000)
hist_rainfall("PERTH", 2023)
hist_rainfall("SYDNEY", 2023)
hist_rainfall("SYDNEY", 2030)
hist_rainfall("SYDNEY", "2030")
hist_rainfall<- function(city,year){
print(city)
print(year)
df1 %>%
filter(city_name == city & year == year) %>%
ggplot(aes(log(rainfall))) +
geom_histogram()
}
hist_rainfall<- function(city,year){
print(city)
print(year)
df1 %>%
filter(city_name == city & year == year) %>%
ggplot(aes(log(rainfall))) +
geom_histogram()
}
hist_rainfall("SYDNEY", "2030")
hist_rainfall<- function(city,year){
print(city)
print(year)
df1 %>%
filter(city_name == "city" & year == "year") %>%
ggplot(aes(log(rainfall))) +
geom_histogram()
}
hist_rainfall("SYDNEY", "2030")
hist_rainfall("SYDNEY", "2019")
hist_rainfall<- function(city,year){
print(city)
print(year)
df1 %>%
filter(city_name == city & year == year) %>%
ggplot(aes(log(rainfall))) +
geom_histogram()
}
hist_rainfall("SYDNEY", "2019")
hist_rainfall<- function(city, year){
print(city)
print(year)
df1 %>%
filter(city_name == city && year == year) %>%
ggplot(aes(log(rainfall))) +
geom_histogram()
}
hist_rainfall("SYDNEY", "2019")
hist_rainfall<- function(city, year){
print(city)
print(year)
df1 %>%
filter(city_name == city & year == year) %>%
ggplot(aes(log(rainfall))) +
geom_histogram()
}
hist_rainfall("SYDNEY", "2019")
df1 %>%
filter(city_name == city & year == year)
df1 %>%
filter(city_name == "BRISBANE" & year == 2030)
df1 %>%
filter(city_name == "BRISBANE" & year == 2019)
install.packages("tidyverse")
install.packages("tidytuesdayR")
install.packages("tidyverse")
install.packages("tidytuesdayR")
tuesdata <- tidytuesdayR::tt_load('2020-01-07')
rainfall <- tuesdata$rainfall
temperature <- tuesdata$temperature
library(tidyverse)
library(lubridate)
new_rainfall <- na.omit(rainfall)
new_rainfall$date <- paste(new_rainfall$year, new_rainfall$month, new_rainfall$day, sep="-") %>% ymd() %>% as.Date()
new_rainfall = select(new_rainfall, -month, -day)
new_rainfall$city_name<- toupper(new_rainfall$city_name)
df1 = merge(new_rainfall, temperature, on ='date')
hist_rainfall<- function(data, city, year){
print(city)
print(year)
data %>%
filter(city_name == city & year == year) %>%
ggplot(aes(log(rainfall))) +
geom_histogram()
}
hist_rainfall(df1, "SYDNEY", "2019")
hist_rainfall(df1, "SYDNEY", 2300)
hist_rainfall(df1, "BRISBANE", 2300)
hist_rainfall(df1, "", 2300)
hist_rainfall(df1, "BRISBANE", )
hist_rainfall(df1, "BRISBANE", "" )
df1 %>%
filter(city_name == "SYDNEY") %>%
filter(year == 2030)
df1 %>%
filter(city_name == "SYDNEY") %>%
filter(year == 2019)
hist_rainfall<- function(data, city, year){
print(city)
print(year)
data %>%
filter(city_name == city) %>%
filter(year == year) %>%
ggplot(aes(log(rainfall))) +
geom_histogram()
}
hist_rainfall(df1, "BRISBANE", "" )
hist_rainfall(df1, "BRISBANE", 2030 )
hist_rainfall(df1, "BRISBANE", 2019)
hist_rainfall<- function(data, city, year){
print(city)
print(year)
df1_f<- filter(data$city_name== city, data$year== year)
print(df1_f)
data %>%
filter(city_name == city) %>%
filter(year == year) %>%
ggplot(aes(log(rainfall))) +
geom_histogram()
}
hist_rainfall(df1, "BRISBANE", 2019)
install.packages()
hist_rainfall<- function(data, city, year){
print(city)
print(year)
df1_f<- filter(data$city_name== city, data$year== year)
print(df1_f)
data %>%
filter(city_name == city) %>%
filter(year == year) %>%
ggplot(aes(log(rainfall))) +
geom_histogram()
}
hist_rainfall(df1, "BRISBANE", 2019)
install.packages(tidyverse)
View(df1)
save(df1, file="rainfall.csv")
write.csv(df1, "rainfall.csv", row.names=FALSE, quote=FALSE)
hist_rainfall<- function(data, city, year){
print(city)
print(year)
df1_f<- filter(data$city_name == city, data$year== year)
print(df1_f)
}
hist_rainfall(df1, "BRISBANE", 2019)
hist_rainfall<- function(data, city, year){
print(city)
print(year)
df1_f<- data %>% filter(data$city_name == city, data$year== year)
print(df1_f)
}
hist_rainfall(df1, "BRISBANE", 2019)
hist_rainfall<- function(data, city, year){
print(city)
print(year)
df1_f<- data %>% filter(data$city_name == city & data$year== year)
length(df1_f)
}
hist_rainfall(df1, "BRISBANE", 2019)
hist_rainfall<- function(data, city, year){
print(city)
print(year)
df1_f<- data %>% filter(data$city_name == city & data$year== year)
length(df1_f)
print(df1_f)
}
hist_rainfall(df1, "BRISBANE", 2019)
hist_rainfall<- function(data, city, year){
print(city)
print(year)
df1_f<- filter(data,city_name == city & year== year)
length(df1_f)
print(df1_f)
}
hist_rainfall(df1, "BRISBANE", 2019)
hist_rainfall(df1, "BRISBANE", "2019")
hist_rainfall<- function(data, city, yr){
print(city)
print(year)
df1_f<- filter(data,city_name == city & year== yr)
length(df1_f)
print(df1_f)
}
hist_rainfall(df1, "BRISBANE", "2019")
hist_rainfall<- function(data, city, yr){
data %>%
filter(city_name == city & year == yr)
ggplot(aes(log(rainfall))) +
geom_histogram()
}
hist_rainfall(df1, "BRISBANE", "2019")
rlang::last_error()
hist_rainfall<- function(city, yr){
df1 %>%
filter(city_name == city & year == yr)
ggplot(aes(log(rainfall))) +
geom_histogram()
}
hist_rainfall("BRISBANE", 2019)
hist_rainfall<- function(city, yr){
df1 %>%
filter(city_name == city & year == yr) %>%
ggplot(aes(log(rainfall))) +
geom_histogram()
}
hist_rainfall("BRISBANE", 2019)
hist_rainfall("BRISBANE", 2030)
hist_rainfall<- function(city, yr){
dff<- filter(df1, city_name == city & year == yr)
if(length(dff) == 0){
stop("Execution stopped. No match found")
} else {
dff %>% ggplot(aes(log(rainfall))) +
geom_histogram()
}
}
hist_rainfall("BRISBANE", 2030)
hist_rainfall("BRISBANE", 2019)
length(df1)
nrow(df1)
hist_rainfall<- function(city, yr){
dff<- filter(df1, city_name == city & year == yr)
if(nrow(dff) == 0){
stop("Execution stopped. No match found")
} else {
dff %>% ggplot(aes(log(rainfall))) +
geom_histogram()
}
}
hist_rainfall("BRISBANE", 2019)
hist_rainfall("BRISBANE", 2030)
x<- c(1:10)
library(tidyverse)
library(dplyr)
library(lubridate)
exp <- function(x,k){
sum <- 0
for(i in 1:k){
sum <- sum + (x)^k/factorial(k)
k <- k - 1
}
return(sum+1)
}
exp(x, 3)
sample_mean<-function(x){
s = sum(x)
l = length(x)
mean_c = s/l
return (mean_c)
}
sample_mean(x)
##Part1B: SD                                                    #ask this
sample_sd<- function(x){
m<- sample_mean(x)
s2= sum((x - m)^2)
l2= length(x)-1
sd2= sqrt(s2/l2)
return (sd2)
}
sample_sd(x)
##Part1C: Confidence interval
calculate_CI<- function(x, k){
N= length(x)
degrees_freedom = N - 1
alpha <- 1 - k
se = sample_sd(x)/sqrt(N)
t_score = qt(p=alpha/2, df=degrees_freedom, lower.tail=FALSE)
mar_err<- t_score * se
CI= c((sample_mean(x)-mar_err),(sample_mean(x)+mar_err))
return(CI)
}
calculate_CI(x, 0.95)
calculate_CI(x, 0.90)
##Load TidyTuesdayR data
tuesdata <- tidytuesdayR::tt_load('2020-01-07')
rainfall <- tuesdata$rainfall
temperature <- tuesdata$temperature
##dropping NAs, creating date column,
new_rainfall <- na.omit(rainfall)
new_rainfall$date <- paste(new_rainfall$year, new_rainfall$month, new_rainfall$day, sep="-") %>% ymd() %>% as.Date()
new_rainfall = select(new_rainfall, -month, -day)
##city_name capitalize, and joining two datasets
new_rainfall$city_name<- toupper(new_rainfall$city_name)
df1 = merge(new_rainfall, temperature, on ='date')
q <- filter(df1, year >= 2014) %>% group_by(city_name, year) %>%
summarise (max_temp = max(temperature, na.rm= TRUE), min_temp = min(temperature, na.rm = TRUE))
q %>% ggplot (aes(x=year, y= max_temp, color= "Maximum temperature", group=1)) + geom_point() + geom_line(color="blue")  + geom_line(aes(y= min_temp, color= "Minimum temperature"))+ geom_point() + facet_grid(. ~ city_name)  + ggtitle("Temperature data over time", subtitle = "Maximum and minimum temperature of each cities over time")+ labs(y= "Temoerature", x= "Time(in years)")
hist_rainfall<- function(city, yr){
dff<- filter(df1, city_name == city & year == yr)
if(nrow(dff) == 0){
stop("Execution stopped. No match found")
} else {
dff %>% ggplot(aes(log(rainfall))) +
geom_histogram()
}
}
hist_rainfall("BRISBANE", 2030)
hist_rainfall("SYDNEY", 2019)
df2 <- filter(df1, year >= 2014)
rain_df<- df2 %>% group_by(city_name, year) %>%
summarise(sm= sample_mean(rainfall), sd= sample_sd(rainfall), lower_bound= calculate_CI(rainfall, 0.95)[[1]], upper_bound= calculate_CI(rainfall, 0.95)[[2]])
plot <- rain_df%>% ggplot (aes(x=year, y= sm, color= "Mean rainfall", group=1))+ ggtitle("Mean rainfall in cities in Australia")+ labs(y= "Rainfall(in inches)", x= "Time(in years)") + geom_point() + geom_line(color="maroon")+ geom_line(aes(y= lower_bound, color= "Lower bound")) +geom_line(aes(y= upper_bound, color= "Upper bound"))+ facet_grid(. ~ city_name) + geom_errorbar(aes(ymin=lower_bound, ymax=upper_bound), width=.2, position=position_dodge(.9))
plot + theme(axis.line = element_line(size = 3, colour = "grey80"))
q %>% ggplot (aes(x=year, y= max_temp, color= "Maximum temperature", group=1)) + geom_point() + geom_line(color="blue")  + geom_line(aes(y= min_temp, color= "Minimum temperature"))+ geom_point() + facet_grid(. ~ city_name)  + ggtitle("Temperature data over time", subtitle = "Maximum and minimum temperature of each cities over time")+ labs(y= "Temperature", x= "Time(in years)") + theme(
plot.title = element_text(face = "bold", size = 12),
legend.background = element_rect(fill = "white", size = 4, colour = "white"),
legend.justification = c(0, 1),
legend.position = c(0, 1),
axis.ticks = element_line(colour = "grey70", size = 0.2),
panel.grid.major = element_line(colour = "grey70", size = 0.2),
panel.grid.minor = element_blank()
)
q %>% ggplot (aes(x=year, y= max_temp, color= "Maximum temperature", group=1)) + geom_point() + geom_line(color="blue")  + geom_line(aes(y= min_temp, color= "Minimum temperature"))+ geom_point() + facet_grid(. ~ city_name)  + ggtitle("Temperature data over time", subtitle = "Maximum and minimum temperature of each cities over time")+ labs(y= "Temperature", x= "Time(in years)") + theme(
plot.title = element_text(face = "bold", size = 12),
legend.background = element_rect(fill = "white", size = 4, colour = "white"),
axis.ticks = element_line(colour = "grey70", size = 0.2),
panel.grid.major = element_line(colour = "grey70", size = 0.2),
panel.grid.minor = element_blank()
)
q %>% ggplot (aes(x=year, y= max_temp, color= "Maximum temperature", group=1)) + geom_point() + geom_line(color="blue")  + geom_line(aes(y= min_temp, color= "Minimum temperature"))+ geom_point() + facet_grid(. ~ city_name)  + ggtitle("Temperature data over time", subtitle = "Maximum and minimum temperature of each cities over time")+ labs(y= "Temperature", x= "Time(in years)") + theme(
plot.title = element_text(face = "bold", size = 12),
legend.background = element_rect(fill = "white", size = 4, colour = "white"),
axis.ticks = element_line(colour = "grey70", size = 0.2),
panel.grid.major = element_line(colour = "grey70", size = 0.2),
panel.grid.minor = element_blank()
) +theme_classic()
q %>% ggplot (aes(x=year, y= max_temp, color= "Maximum temperature", group=1)) + geom_point() + geom_line(color="blue")  + geom_line(aes(y= min_temp, color= "Minimum temperature"))+ geom_point() + facet_grid(. ~ city_name)  + ggtitle("Temperature data over time", subtitle = "Maximum and minimum temperature of each cities over time")+ labs(y= "Temperature", x= "Time(in years)") + theme(
plot.title = element_text(face = "bold", size = 12),
legend.background = element_rect(fill = "white", size = 4, colour = "white"),
axis.ticks = element_line(colour = "grey70", size = 0.2),
panel.grid.major = element_line(colour = "grey70", size = 0.2),
panel.grid.minor = element_blank()
)
q %>% ggplot (aes(x=year, y= max_temp, color= "Maximum temperature", group=1)) + geom_point() + geom_line(color="blue")  + geom_line(aes(y= min_temp, color= "Minimum temperature"))+ geom_point() + facet_grid(. ~ city_name)  + ggtitle("Temperature data over time", subtitle = "Maximum and minimum temperature of each cities over time")+ labs(y= "Temperature", x= "Time(in years)") + theme(
plot.title = element_text(face = "bold", size = 12),
legend.background = element_rect(fill = "white", size = 4, colour = "white"),
axis.ticks = element_line(colour = "grey70", size = 0.2),
panel.grid.major = element_line(colour = "grey70", size = 0.2),
panel.grid.minor = element_blank()
) + theme_linedraw()
q %>% ggplot (aes(x=year, y= max_temp, color= "Maximum temperature", group=1)) + geom_point() + geom_line(color="blue")  + geom_line(aes(y= min_temp, color= "Minimum temperature"))+ geom_point() + facet_grid(. ~ city_name)  + ggtitle("Temperature data over time", subtitle = "Maximum and minimum temperature of each cities over time")+ labs(y= "Temperature", x= "Time(in years)") + theme(
plot.title = element_text(face = "bold", size = 12),
legend.background = element_rect(fill = "white", size = 4, colour = "white"),
axis.ticks = element_line(colour = "grey70", size = 0.2),
panel.grid.major = element_line(colour = "grey70", size = 0.2),
panel.grid.minor = element_blank()
) + theme_grey()
plot <- rain_df%>% ggplot (aes(x=year, y= sm, color= "Mean rainfall", group=1))+ ggtitle("Mean rainfall in cities in Australia")+ labs(y= "Rainfall(in inches)", x= "Time(in years)") + geom_point() + geom_line(color="maroon")+ geom_line(aes(y= lower_bound, color= "Lower bound")) +geom_line(aes(y= upper_bound, color= "Upper bound"))+ facet_grid(. ~ city_name) + geom_errorbar(aes(ymin=lower_bound, ymax=upper_bound), width=.2, position=position_dodge(.9))
plot + theme_classic()
plot <- rain_df%>% ggplot (aes(x=year, y= sm, color= "Mean rainfall", group=1))+ ggtitle("Mean rainfall in cities in Australia")+ labs(y= "Rainfall(in inches)", x= "Time(in years)") + geom_point() + geom_line(color="maroon")+ geom_line(aes(y= lower_bound, color= "Lower bound")) +geom_line(aes(y= upper_bound, color= "Upper bound"))+ facet_grid(. ~ city_name) + geom_errorbar(aes(ymin=lower_bound, ymax=upper_bound), width=.2, position=position_dodge(.9))
plot + theme_grey()
plot <- rain_df%>% ggplot (aes(x=year, y= sm, color= "Mean rainfall", group=1))+ ggtitle("Mean rainfall in cities in Australia")+ labs(y= "Rainfall(in inches)", x= "Time(in years)") + geom_point() + geom_line(color="maroon")+ geom_line(aes(y= lower_bound, color= "Lower bound")) +geom_line(aes(y= upper_bound, color= "Upper bound"))+ facet_grid(. ~ city_name) + geom_errorbar(aes(ymin=lower_bound, ymax=upper_bound), width=.2, position=position_dodge(.9))
plot + theme_linedraw()
plot <- rain_df%>% ggplot (aes(x=year, y= sm, color= "Mean rainfall", group=1))+ ggtitle("Mean rainfall in cities in Australia")+ labs(y= "Rainfall(in inches)", x= "Time(in years)") + geom_point() + geom_line(color="maroon")+ geom_line(aes(y= lower_bound, color= "Lower bound")) +geom_line(aes(y= upper_bound, color= "Upper bound"))+ facet_grid(. ~ city_name) + geom_errorbar(aes(ymin=lower_bound, ymax=upper_bound), width=.2, position=position_dodge(.9))
plot + theme_light
plot <- rain_df%>% ggplot (aes(x=year, y= sm, color= "Mean rainfall", group=1))+ ggtitle("Mean rainfall in cities in Australia")+ labs(y= "Rainfall(in inches)", x= "Time(in years)") + geom_point() + geom_line(color="maroon")+ geom_line(aes(y= lower_bound, color= "Lower bound")) +geom_line(aes(y= upper_bound, color= "Upper bound"))+ facet_grid(. ~ city_name) + geom_errorbar(aes(ymin=lower_bound, ymax=upper_bound), width=.2, position=position_dodge(.9))
plot + theme_light()
View(tuesdata)
write.csv(tuesdata,"tuesdata.csv", row.names = FALSE)
View(rainfall)
write.csv(rainfall,"rainfall.csv", row.names = FALSE)
write.csv(temperature,"temperature.csv", row.names = FALSE)
install.packages(lubridate)
install.packages("lubridate")
library(tidyverse)
library(lubridate)
today()
now()
x <- c("2016-04-05",
"2016/05/06",
"2016,10,4")
ymd(x)
x
myd(x)
library(nycflights13)
install.packages(nycflights13)
install.packages("nycflights13")
library(nycflights13)
flights %>%
select(year, month, day)
attr(x, "tzone") <- "IST"
x
x <- ymd_hm("1970-01-01 01:00", tz = "")
x
attr(x, "tzone") <- "IST"
x
